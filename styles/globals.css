/* Import the Google Font first */
@import url('https://fonts.googleapis.com/css2?family=Luckiest+Guy&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Mario Theme Variables Integrated into Tailwind's Structure */
    --font-family-mario: 'Luckiest Guy', cursive, sans-serif;

    /* Overriding Tailwind's default color palette with Mario theme (HSL format for Tailwind compatibility) */
    --background: /* #f7e26b */ 53 89% 85%;        /* Base background color from Mario's --color-bg */
    --foreground: /* #22223b */ 237 27% 18%;      /* Base text color from Mario's --color-text */
    
    --primary: /* #e63946 */ 355 79% 56%;         /* Primary action color from Mario's --color-primary */
    --primary-foreground: /* #ffffff */ 0 0% 100%; /* Text on primary elements (Mario's --color-text-alt) */
    
    --secondary: /* #457b9d */ 203 39% 44%;       /* Secondary action/element color from Mario's --color-secondary */
    --secondary-foreground: /* #ffffff */ 0 0% 100%; /* Text on secondary elements (can adjust if needed) */

    --accent: /* #f77f00 */ 31 100% 49%;          /* Accent color from Mario's --color-accent */
    --accent-foreground: /* #ffffff */ 0 0% 100%;  /* Text on accent elements (can adjust if needed) */

    --border: /* #2d3142 */ 231 20% 22%;          /* Default border color from Mario's --color-border */
    
    /* Card specific colors from Mario theme */
    --card: /* #ffe066 */ 48 100% 70%;            /* Card background (Mario's --color-bg-alt) */
    --card-foreground: var(--foreground);         /* Text in cards, using main text color */

    /* Popover - using card styles as a base from Mario theme */
    --popover: var(--card);
    --popover-foreground: var(--card-foreground);
    
    /* Muted, Destructive - Mario theme doesn't explicitly define these.
       Provide sensible defaults or map them if a Mario color fits.
    */
    --muted: /* Adjust as needed, e.g., a desaturated bg or text color */ 230 10% 90%; 
    --muted-foreground: /* Adjust as needed */ 230 10% 40%;

    --destructive: /* A red suitable for destructive actions, e.g., Mario's primary or a variation */ 355 79% 50%; 
    --destructive-foreground: var(--primary-foreground);

    /* Input-specific background from Mario theme */
    --input-mario-bg: #fffbe7;
    /* Use --border for input borders for consistency with Tailwind's approach */
    --input: var(--border); 

    --ring: var(--accent); /* Ring color, often used for focus outlines */
    
    --radius: 1.5rem; /* General border radius from Mario theme's --border-radius */

    /* Mario specific custom properties (can be used directly or as reference) */
    --color-bg-mario: #f7e26b;
    --color-bg-alt-mario: #ffe066;
    --color-text-mario: #22223b;
    --color-text-alt-mario: #fff;
    --color-primary-mario: #e63946;
    --color-secondary-mario: #457b9d;
    --color-accent-mario: #f77f00;
    --color-border-mario: #2d3142;
    --color-shadow-mario: #00000033;
    --box-shadow-mario: 0 8px 24px var(--color-shadow-mario), 0 1.5px 0 var(--color-border-mario);

    /* Original Chart colors - commented out, adapt or remove as needed for the new theme.
    --chart-1: 221.2 83.2% 53.3%;
    --chart-2: 262.1 83.3% 57.8%;
    --chart-3: 316.6 73.3% 52.5%;
    --chart-4: 4.8 90.6% 58.4%;
    --chart-5: 27.6 87.9% 49.6%;
    --chart-6: 47.7 80.4% 47.3%;
    */
  }

  /* Dark mode from original theme - The Mario theme doesn't specify a dark mode.
     This block is commented out. You might want to create a new Mario-based dark theme
     or remove dark mode support if not needed.
  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 224.3 76.3% 48%;
  }
  */
}

@layer base {
  /* The original * { @apply border-border; } has been removed.
     The Mario theme applies borders to specific elements.
     If you want a global border, you can add that rule back here. */
  
  html {
    font-family: var(--font-family-mario);
    color: hsl(var(--foreground)); /* Uses Mario's text color via --foreground */
    min-height: 100vh;
    font-size: 18px; /* Example: default is often 16px. Try 18px, 20px, or even percentages like 112.5% (for 18px if base is 16px) */
  }
  body {
    /* Overrides Tailwind's default bg-background to apply the Mario gradient */
    background: linear-gradient(135deg, var(--color-bg-mario), var(--color-bg-alt-mario) 80%);
    /* font-family and color are inherited from html */
    /* Tailwind's base styles will also apply text-foreground if not overridden */
    min-height: 100vh;
  }

  h1, h2, h3, h4, h5, h6 {
    font-family: var(--font-family-mario); /* Explicitly set, though inherited */
    color: hsl(var(--primary));
    text-shadow: 2px 2px 0 hsl(var(--border)), 4px 4px 0 var(--color-shadow-mario);
  }

  a {
    color: hsl(var(--secondary));
    text-decoration: none;
    font-weight: bold;
    transition: color 0.2s;
  }
  a:hover {
    color: hsl(var(--accent));
    text-shadow: 1px 1px 0 hsl(var(--border));
  }

  input, textarea, select {
    font-family: var(--font-family-mario);
    border: 2px solid hsl(var(--border)); /* Uses Mario's border color via --border */
    border-radius: 0.75em; /* Mario specific radius for inputs */
    padding: 0.5em 1em;
    background: var(--input-mario-bg); /* Specific Mario input background */
    color: hsl(var(--foreground)); /* Uses Mario's text color */
    margin-bottom: 1em; /* As per Mario theme */
  }
  
  img, .img-border { /* Style all images and elements with .img-border */
    border: 4px solid hsl(var(--accent));
    border-radius: 1.5em; /* Mario specific radius for images */
    box-shadow: 0 4px 16px var(--color-shadow-mario);
    background: var(--input-mario-bg); /* Mario uses #fffbe7 for image backgrounds too */
  }
}

@layer components {
  .btn, button { /* Applied to .btn class and button elements */
    font-family: var(--font-family-mario);
    background: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
    border: 3px solid hsl(var(--border));
    border-radius: var(--radius); /* Uses the general --radius (1.5rem from Mario) */
    box-shadow: var(--box-shadow-mario);
    padding: 0.75em 2em;
    font-size: 1.2em;
    letter-spacing: 1px;
    cursor: pointer;
    transition: background 0.2s, transform 0.1s;
  }
  .btn:hover, button:hover {
    background: hsl(var(--accent));
    transform: scale(1.05) rotate(-2deg);
  }

  .card, .container, .box { /* Custom component classes from Mario theme */
    background: hsl(var(--card)); /* Uses Mario's --color-bg-alt via --card */
    border: 3px solid hsl(var(--border));
    border-radius: var(--radius); /* Uses the general --radius */
    box-shadow: var(--box-shadow-mario);
    padding: 2em;
    margin: 1.5em 0; /* As per Mario theme */
  }
}

/* Global styles for scrollbar */
::-webkit-scrollbar {
  width: 12px;
  background: var(--color-bg-alt-mario);
}
::-webkit-scrollbar-thumb {
  background: hsl(var(--primary));
  border-radius: 6px;
  border: 2px solid hsl(var(--border));
}

/* Animations and Keyframes from Mario Theme */
.pop {
  animation: pop 0.3s cubic-bezier(.36,1.56,.64,1) both;
}
@keyframes pop {
  0% { transform: scale(0.7) rotate(-8deg); }
  80% { transform: scale(1.1) rotate(2deg); }
  100% { transform: scale(1) rotate(0deg); }
}

.coin-spin {
  animation: coin-spin 1.2s infinite linear;
}
@keyframes coin-spin {
  0% { transform: rotateY(0deg); }
  100% { transform: rotateY(360deg); }
}

/* Utility Classes from Mario Theme */
.comic-outline {
  text-shadow:
    2px 2px 0 hsl(var(--border)),
    -2px 2px 0 hsl(var(--border)),
    2px -2px 0 hsl(var(--border)),
    -2px -2px 0 hsl(var(--border));
}

/* RTL Support from original file - preserved */
html[lang="ar"] {
  direction: rtl;
}
html[lang="ar"] .ltr-only {
  direction: ltr;
}
html[lang="ar"] .flip-in-rtl {
  transform: scaleX(-1);
}
/* Adjust spacing for RTL languages */
html[lang="ar"] .ml-2 {
  margin-left: 0;
  margin-right: 0.5rem;
}
html[lang="ar"] .mr-2 {
  margin-right: 0;
  margin-left: 0.5rem;
}
html[lang="ar"] .ml-4 {
  margin-left: 0;
  margin-right: 1rem;
}
html[lang="ar"] .mr-4 {
  margin-right: 0;
  margin-left: 1rem;
}
html[lang="ar"] .mr-6 {
  margin-right: 0;
  margin-left: 1.5rem;
}